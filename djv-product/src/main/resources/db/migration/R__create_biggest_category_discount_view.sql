CREATE OR REPLACE VIEW biggestCategoryDiscount AS
WITH RECURSIVE ALL_CATEGORY_DISCOUNTS(ID, PARENTCATEGORY, MAX_PERCENTAGE_DISCOUNT, MAX_ABSOLUTE_DISCOUNT)
  AS
  (
    SELECT
      c.ID,
      c.PARENTCATEGORY,
      IFNULL( dp.VALUE, 0),
      IFNULL( da.VALUE, 0)
    FROM
      category c LEFT JOIN categoryDiscount cd on c.ID = cd.CATEGORYID
                 LEFT JOIN discount dp on cd.ID = dp.ID and dp.TYPE = 'PERCENTAGE'
                 LEFT JOIN discount da on cd.ID = da.ID and da.TYPE = 'ABSOLUTE'
    WHERE c.PARENTCATEGORY IS null
  UNION ALL
    SELECT
        c.ID,
        c.PARENTCATEGORY,
        GREATEST( IFNULL(dp.VALUE,0),IFNULL(ALL_CATEGORY_DISCOUNTS.MAX_PERCENTAGE_DISCOUNT,0)),
        GREATEST( IFNULL(da.VALUE,0), IFNULL(ALL_CATEGORY_DISCOUNTS.MAX_ABSOLUTE_DISCOUNT,0))
    FROM
      category c LEFT JOIN categoryDiscount cd on c.ID = cd.CATEGORYID
                 LEFT JOIN discount dp on cd.ID = dp.ID and  dp.TYPE = 'PERCENTAGE'
                 LEFT JOIN discount da on cd.ID = da.ID and da.TYPE = 'ABSOLUTE'
                 INNER JOIN ALL_CATEGORY_DISCOUNTS on ALL_CATEGORY_DISCOUNTS.ID = c.PARENTCATEGORY
  ) SELECT ID as CATEGORY_ID, MAX(MAX_PERCENTAGE_DISCOUNT), MAX(MAX_ABSOLUTE_DISCOUNT) FROM ALL_CATEGORY_DISCOUNTS GROUP BY CATEGORY_ID;