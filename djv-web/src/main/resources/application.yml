# This file should hold all the configuration that does not depend on
# the environment in which the app is running

databaseSchema: dejavu

constants:
  minimalPricePercentage: 10

logging:
  level:
    lt.dejavu.web.logging.RequestLoggingFilter: DEBUG
    lt.dejavu.logging.logger.RequestLoggerImpl: ERROR

spring:
  datasource:
    testOnBorrow: true
    testWhileIdle: true
    timeBetweenEvictionRunsMillis: 60000
    validationQuery: SELECT 1
  http:
    multipart:
      max-file-size: 10MB

server:
  compression:
    enabled: true
    minRsponseSize: 1024
    mimeTypes:
      - text/html
      - application/javascript
      - text/css
    
rest:
  basePath: /api
  auth: ${rest.basePath}/auth
  cart: ${rest.basePath}/cart
  category: ${rest.basePath}/category
  discount: ${rest.basePath}/discount
  health: ${rest.basePath}/health
  image: ${rest.basePath}/image
  order: ${rest.basePath}/order
  payment: ${rest.basePath}/payment
  product: ${rest.basePath}/product
  review: ${rest.order}/review
  user: ${rest.basePath}/user


auth:
  secret: changeit
  rights:
    REGULAR:
      - GET ${rest.user}/{id}
      - POST ${rest.user}/{id}
      - POST ${rest.user}/
      - GET ${rest.order}/history
      - GET ${rest.cart}/
      - POST ${rest.cart}/
      - PUT ${rest.cart}/
      - DELETE ${rest.cart}/*
      - POST ${rest.cart}/checkout
      - GET ${rest.user}/profile
      - GET ${rest.review}/*
    ADMIN:
      - GET ${rest.user}/*
      - GET ${rest.user}/
      - POST ${rest.user}/*/ban
      - POST ${rest.image}/upload
      - PUT ${rest.category}/*
      - DELETE ${rest.category}/*
      - POST ${rest.category}/create
      - POST ${rest.product}/
      - PUT ${rest.product}/*
      - DELETE ${rest.product}/*
      # TODO: maybe the declarations below are enough? 
      - GET *
      - POST *
      - PUT *
      - DELETE *

flyway:
  placeholders:
    schemaName: ${databaseSchema}
    # Configuration for DB table and column names
    tables:
      user:
        name: user
        columns:
          id: id
          email: email
          password: password
          firstName: firstName
          lastName: lastName
          type: type
          banned: banned
      product:
        name: product
        columns:
          id: id
          name: name
          description: description
          category: category
          price: price
          creationDate: creationDate
      category:
        name: category
        columns:
          id: id
          name: name
          iconName: iconName
          displayName: displayName
          parentCategory: parentCategory

payment:
  paymentServiceAddress: http://mock-payment-processor.appspot.com
  credentials:
    username: technologines
    password: platformos
